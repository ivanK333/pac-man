version: "3.9"

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      ./.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      nginx_net:

  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
        NODE_ENV: ${NODE_ENV}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "24678:24678"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      NODE_ENV: ${NODE_ENV}
    env_file:
      ./.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      nginx_net:

  nginx:
    container_name: nginx
    image: nginx:mainline
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/server.crt:/etc/nginx/server.crt
      - ./nginx/server.key:/etc/nginx/server.key
    ports:
      - "80:80"
      - "443:443"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    restart: unless-stopped
    networks:
      nginx_net:

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    networks:
      nginx_net:
    volumes:
      - ./nginx:/etc/letsencrypt
      - ./nginx:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


networks:
  nginx_net:
    name: nginx_net

volumes:
  pgdata: